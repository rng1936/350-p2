Matthew Zhou - Made sys functions and sys wrapper functions, for child first. With in the fork function based on if the if the child first variable had a 0 or 1; then fork function it will yeild or not.
Also made sys funcitons and wrapper functions for the set schded. Had a global variable for if stride sched would to be used as the scheduing process or not.

Ronald Ng - I implemented transfer_tickets() and distributeTickets(). transfer_tickets() transfers tickets from the current process to a target process. distributeTickets() distributes the number of tickets evenly to all active processes as well as whenever a process added or removed in the system. I also added the helper functions getActiveProcNum() to find the number of active processes and findProc() to find a process using the pid as the argument. 

Vincenzo Cataneo- I implemented the tickets_owned() function. The tickets_owned() function takes a given process and then will return the number of tickets said process has assigned to it. The wrapper function uses a given pid to do the previously stated functionality. 

Jacob Helhoski - I implemented the stride scheduler, located inside the scheduler() function in proc.c. In the default scheduler, I check the stride bit after each process is run on the cpu. If the stride bit has been set to 1, I break out of the current scheduler loop into the stride loop. This loop repeatedly finds the process with the lowest pass, runs that process, and updates that process's pass value. The loop terminates when no processes remain in the process table, then the outermost loop releases the lock on the process table and halts to prevents the 100% cpu utilization problem.
